function [y, w] = processBiquad(x, filt, ch)
    % Numerically stable implementation using direct form II transposed

    % Ensure coefficients are exactly zero if very close to zero
    % Inline function to set values close to zero to exactly zero
    % setToZero = @(x) (abs(x) < 1e-10) * 0 + (abs(x) >= 1e-10) * x;
    % 
    % a0 = setToZero(filt.a0);
    % a1 = setToZero(filt.a1);
    % a2 = setToZero(filt.a2);
    % b0 = setToZero(filt.b0);
    % b1 = setToZero(filt.b1);
    % b2 = setToZero(filt.b2);

    a0 = filt.a0;
    a1 = setToZero(filt.a1);
    a2 = setToZero(filt.a2);
    b0 = setToZero(filt.b0);
    b1 = setToZero(filt.b1);
    b2 = setToZero(filt.b2);


    % Normalize coefficients
    a0 = a0 / b0;
    a1 = a1 / b0;
    a2 = a2 / b0;
    b1 = b1 / b0;
    b2 = b2 / b0;
    b0 = 1;  % Normalized to 1

    N = length(x);
    y = zeros(N, 1);
    
    % Get initial state
    w1 = filt.w(1, ch);
    w2 = filt.w(2, ch);

    % Direct Form II Transposed implementation
    for n = 1:N
        y(n) = a0 * x(n) + w1;
        w1 = a1 * x(n) + w2 - b1 * y(n);
        w2 = a2 * x(n) - b2 * y(n);
    end

    % Update filter state
    w = [w1; w2];
end

% function [y, w] = processBiquad(x, filt, ch)
% 
%     N = length(x);  % Number of input samples
%     y = zeros(N, 1); % Output vector of zeroes
%     % w = zeros(N, 1); % Intermediate vector of zeroes
% 
%     % Filter coefficients
% 
%     a0 = filt.a0;
%     a1 = filt.a1;
%     a2 = filt.a2;
%     b0 = filt.b0;
%     b1 = filt.b1;
%     b2 = filt.b2;
% 
%     % Get initial state   
%     w1 = filt.w(1, ch);
%     w2 = filt.w(2, ch);
% 
%     % Difference equations
%     for n = 1:N % Loop through each sample in x
%         wn = x(n) - (b1/b0) * w1 - (b2/b0) * w2;
%         y(n) = (a0/b0) * wn + (a1/b0) * w1 + (a2/b0) * w2;
% 
%         w2 = w1; % w[n-2] = w[n-1]
%         w1 = wn; % w[n-1] = w[n]
%     end
% 
%     % filt.w(:, ch) = [w1; w2];
%     w = [w1; w2];
% 
% end


% function [y, w] = processBiquad(x, filt, ch)
% 
%    [y,w] = filter([filt.a0, filt.a1, filt.a2], [filt.b0, filt.b1, filt.b2],x,filt.w(:,ch));
% 
% end